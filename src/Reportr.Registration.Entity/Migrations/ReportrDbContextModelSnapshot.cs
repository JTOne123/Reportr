// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reportr.Registration.Entity;

namespace Reportr.Registration.Entity.Migrations
{
    [DbContext(typeof(ReportrDbContext))]
    partial class ReportrDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Reportr.Registration.Authorization.ReportParameterConstraint", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<Guid>("AssignmentId");

                    b.Property<int>("MappingType");

                    b.Property<string>("MappingValue");

                    b.Property<string>("MappingValueTypeName");

                    b.Property<string>("ParameterName");

                    b.HasKey("Id", "AssignmentId");

                    b.HasIndex("AssignmentId");

                    b.ToTable("ReportParameterConstraints");
                });

            modelBuilder.Entity("Reportr.Registration.Authorization.ReportRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("Title");

                    b.Property<int>("Version");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("ReportRoles");
                });

            modelBuilder.Entity("Reportr.Registration.Authorization.ReportRoleAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("ReportName");

                    b.Property<string>("RoleName");

                    b.Property<int>("Version");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("ReportRoleAssignments");
                });

            modelBuilder.Entity("Reportr.Registration.Categorization.ReportCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<Guid?>("ParentCategoryId");

                    b.Property<string>("Title");

                    b.Property<int>("Version");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("ReportCategories");
                });

            modelBuilder.Entity("Reportr.Registration.Categorization.ReportCategoryAssignment", b =>
                {
                    b.Property<Guid>("AssignmentId");

                    b.Property<Guid>("CategoryId");

                    b.Property<string>("ReportName");

                    b.HasKey("AssignmentId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ReportCategoryAssignments");
                });

            modelBuilder.Entity("Reportr.Registration.RegisteredReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BuilderAssemblyLocation");

                    b.Property<string>("BuilderAssemblyName");

                    b.Property<string>("BuilderTypeAssemblyQualifiedName");

                    b.Property<string>("BuilderTypeFullName");

                    b.Property<string>("BuilderTypeName");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDisabled");

                    b.Property<DateTime?>("DateEnabled");

                    b.Property<DateTime>("DateModified");

                    b.Property<DateTime>("DateSourceSpecified");

                    b.Property<string>("Description");

                    b.Property<bool>("Disabled");

                    b.Property<string>("Name");

                    b.Property<string>("ScriptSourceCode");

                    b.Property<int>("SourceType");

                    b.Property<string>("Title");

                    b.Property<int>("Version");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("RegisteredReports");
                });

            modelBuilder.Entity("Reportr.Registration.RegisteredReportSourceRevision", b =>
                {
                    b.Property<Guid>("RevisionId");

                    b.Property<Guid>("ReportId");

                    b.Property<string>("BuilderTypeName");

                    b.Property<DateTime>("DateOriginallySpecified");

                    b.Property<DateTime>("DateRevised");

                    b.Property<int>("Number");

                    b.Property<string>("ScriptSourceCode");

                    b.Property<int>("SourceType");

                    b.HasKey("RevisionId", "ReportId");

                    b.HasIndex("ReportId");

                    b.ToTable("RegisteredReportSourceRevisions");
                });

            modelBuilder.Entity("Reportr.Registration.Authorization.ReportParameterConstraint", b =>
                {
                    b.HasOne("Reportr.Registration.Authorization.ReportRoleAssignment", "Assignment")
                        .WithMany("ParameterConstraints")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Reportr.Registration.Categorization.ReportCategory", b =>
                {
                    b.HasOne("Reportr.Registration.Categorization.ReportCategory", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryId");
                });

            modelBuilder.Entity("Reportr.Registration.Categorization.ReportCategoryAssignment", b =>
                {
                    b.HasOne("Reportr.Registration.Categorization.ReportCategory", "Category")
                        .WithMany("AssignedReports")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Reportr.Registration.RegisteredReportSourceRevision", b =>
                {
                    b.HasOne("Reportr.Registration.RegisteredReport", "Report")
                        .WithMany("SourceRevisions")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
