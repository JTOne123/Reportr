High Priority
-------------

** Should we abstract Nettle away and make the template/binding more generic so we can use alternative templating engines (e.g. Razor)?

- Complete ReportFilter
	- Create report filter generator that takes a flat object(s)

- Implement IReportGenerator
	- Complete GetComponentGenerator method

- Create 'Infrastructure' project that manages storage and retrieval of definitions, categories etc

- Create SQL 'Data' project to implement data interfaces with SQL implementations

- Create way of 'registering' IQuery etc implementations so project can use with IoC containers


Security
--------

- Reports for certain types of user (roles)

- Locked/defaulted filter parameters/values based on role?


Templates
---------

- How do report template contents tell us their size? How about optional "promised" row height? table header and footer height? Chart height? Then we can calculate page sizes

- Template page optional size (units e.g. %, pixels cm etc) of width and height so we can auto paginate
	- Also add margin details (for printing and screen padding)


Rendering
---------

- Integrate with Nettle
	- Can we add an IsDefined(path) function to Nettle so we can see if path exists?

- Design report auto export mechanism (e.g. CSV, XML, JSON etc)
	- See https://github.com/danielpalme/ReportGenerator


Low Priority
------------

- Create report component mocking (e.g. generate fake data for chart) for report building and testing

- Create report builder with storage mechanism

- Create Report Definition Language (RDL)
	- See docs\Brainstorming\RDL Brainstorm Example.rdl
	- https://docs.microsoft.com/en-us/sql/reporting-services/reports/report-definition-language-ssrs?view=sql-server-2017
	- https://github.com/Microsoft/sql-server-samples/tree/master/samples/features/r-services/ssms-custom-reports
